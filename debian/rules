#!/usr/bin/make -f

export DH_VERBOSE=1
export PYBUILD_NAME=tapo

# Package version (will be updated by Jenkins)
TAPO_VERSION := 0.8.4
# Python 3 versions
PYTHON3 := $(shell py3versions -r)

%:
	dh $@ --with python3 --buildsystem=pybuild

override_dh_auto_clean:
	dh_auto_clean
	rm -rf build/
	rm -rf __pycache__/
	# Don't remove tapo-$(TAPO_VERSION)/ during clean to preserve sources
	# Only remove on distclean
	find . -name "*.pyc" -delete

distclean: clean
	rm -rf tapo-$(TAPO_VERSION)/
	rm -f tapo-*.whl

override_dh_auto_configure:
	# Download and extract wheel if not already present
	if [ ! -d "tapo-$(TAPO_VERSION)" ]; then \
		echo "Downloading tapo wheel from PyPI..."; \
		python3 -m pip download --no-deps --only-binary=:all: tapo==$(TAPO_VERSION); \
		echo "Extracting wheel contents..."; \
		WHEEL_FILE=$$(ls tapo-$(TAPO_VERSION)-*.whl | head -1); \
		echo "Found wheel file: $$WHEEL_FILE"; \
		mkdir -p tapo-$(TAPO_VERSION); \
		cd tapo-$(TAPO_VERSION) && python3 -m zipfile -e "../$$WHEEL_FILE" .; \
		echo "Wheel extracted successfully"; \
	fi

override_dh_auto_build:
	# No build needed for prebuilt wheel

override_dh_auto_install:
	# Install from the extracted wheel contents
	@echo "Installing tapo from extracted wheel..."
	@echo "Looking for tapo directory..."
	@ls -la tapo-$(TAPO_VERSION)/ || echo "Directory not found!"
	set -ex; \
	for python in $(PYTHON3); do \
		python_version=$$($$python -c "import sys; print('%d.%d' % sys.version_info[:2])"); \
		site_packages_dir="debian/python3-tapo/usr/lib/python3/dist-packages"; \
		mkdir -p "$$site_packages_dir"; \
		cp -r tapo-$(TAPO_VERSION)/tapo "$$site_packages_dir/"; \
		cp -r tapo-$(TAPO_VERSION)/tapo-$(TAPO_VERSION).dist-info "$$site_packages_dir/"; \
	done
	@echo "Installation completed successfully"

override_dh_auto_test:
	# Skip tests for prebuilt package

override_dh_python3:
	dh_python3 --shebang=/usr/bin/python3
